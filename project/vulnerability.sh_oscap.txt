vulnerability.sh_oscap

#!/bin/bash

# Ensure the script is run as root
if [ "$(id -u)" -ne "0" ]; then
    echo "This script must be run as root" 1>&2
    exit 1
fi

# Path to the SCAP data stream file
SCAP_DS="/usr/share/xml/scap/ssg/content/ssg-rhel9-ds.xml"

# Path to the profile ID
PROFILE_ID="xccdf_org.ssgproject.content_profile_cis_server_l1"

# Paths for results and report
RESULTS_FILE="arf.xml"
REPORT_FILE="report.html"

# Create a test vulnerability:
# Example: Disable firewall (this should generally be enabled in secure systems)
echo "Disabling firewall as a test vulnerability..."
systemctl stop firewalld
systemctl disable firewalld

# Example: Allow root login via SSH (generally should be disabled for security)
echo "Allowing root login via SSH..."
sed -i 's/^PermitRootLogin .*$/PermitRootLogin yes/' /etc/ssh/sshd_config
systemctl restart sshd

# Run OpenSCAP evaluation
echo "Running OpenSCAP evaluation..."
oscap xccdf eval --profile $PROFILE_ID --results-arf $RESULTS_FILE --report $REPORT_FILE $SCAP_DS

# Output result
echo "OpenSCAP evaluation completed. Check $REPORT_FILE for details."

# Clean up: Optionally revert changes after testing
# Uncomment the following lines if you want to restore the system to its original state
# echo "Reverting changes..."
# systemctl enable firewalld
# systemctl start firewalld
# sed -i 's/^PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config
# systemctl restart sshd



chmod +x  vulnerability.sh
./vulnerability.sh